name: release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.24.x' ]
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/checkout@v4
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout=5m

  build:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        go-version: [ '1.24.x' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install poetry
        run: pipx install poetry && sudo apt-get update && sudo apt-get install reprepro gnupg2 -y

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'poetry'

      - name: Install Python3 dependencies
        id: install-python-deps
        run: poetry install

      - name: Create Release Server
        id: createRelease-server
        uses: goreleaser/goreleaser-action@v6
        if: success() && startsWith(github.ref, 'refs/tags/')
        with:
          version: latest
          args: release
        env:
          GITHUB_TOKEN: ${{ secrets.ACTION_TOKEN }}

      - name: Branch name
        id: branch_name
        run: |
          echo "SOURCE_NAME=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "SOURCE_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          echo "SOURCE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Upload packages to Cloudflare R2
        id: upload-r2-apt
        run: bash release.sh
        env:
          CF_R2_BUCKET: ${{ secrets.CF_R2_BUCKET }}
          CF_KEY_ID: ${{ secrets.CF_KEY_ID }}
          CF_KEY_SECRET: ${{ secrets.CF_KEY_SECRET }}
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CF_BINARY: lens
          CF_RELEASE_TAG: ${{ env.SOURCE_TAG }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
